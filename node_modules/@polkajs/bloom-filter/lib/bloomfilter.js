'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _murmurhash=require('murmurhash3');var _murmurhash2=_interopRequireDefault(_murmurhash);var _bignumber=require('bignumber.js');var _bignumber2=_interopRequireDefault(_bignumber);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Bloom=function(){function Bloom(size,numHashes,hashFunc){_classCallCheck(this,Bloom);if(size<0||numHashes<0)throw'Invalid parameters';this.bitmapBits=size*8;this.k=Math.ceil(size/numHashes*Math.log(2))||1;this.bitmap=Buffer.alloc(size);this.numHashes=numHashes;this.hashFunc=hashFunc?hashFunc:_murmurhash2.default.murmur128HexSync}_createClass(Bloom,[{key:'extendBloom',value:function extendBloom(b){var c=this.bitmapBits>b.bitmapBits?b.bitmapBits:this.bitmapBits;for(var i=0;i<c/8;i++){this.bitmap[i]|=b.bitmap[i]}return this}},{key:'add',value:function add(data){var hash=this.hashFunc(data);for(var i=0;i<this.k;i++){var num=this.nthHash(i,new _bignumber2.default(hash.slice(0,Math.floor(hash.length/2)),16),new _bignumber2.default(hash.slice(Math.floor(hash.length/2)),16),this.bitmapBits);this.bitmap[Math.floor(num/8)]|=Math.pow(2,7-num%8)}}},{key:'inSet',value:function inSet(data){var hash=this.hashFunc(data);for(var i=0;i<this.k;i++){var num=this.nthHash(i,new _bignumber2.default(hash.slice(0,Math.floor(hash.length/2)),16),new _bignumber2.default(hash.slice(Math.floor(hash.length/2)),16),this.bitmapBits);if(!(this.bitmap[Math.floor(num/8)]&&Math.pow(2,7-num%8)))return false}return true}},{key:'toString',value:function toString(){return this.bitmap.toString('hex')}},{key:'nthHash',value:function nthHash(n,hashA,hashB,filterSize){return hashA.mul(hashB.add(n)).mod(filterSize)}}]);return Bloom}();exports.default=Bloom;function getOptimalK(bitmapSize,itemsCount){var k_num=Math.ceil(bitmapSize/itemsCount*Math.log(2));return Math.max(k_num,1)}